[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Assignments",
    "section": "",
    "text": "Assignment 3\n\n\n\nCovid graph\nAnscombe's Quartet\n\n\n\n\n\n\n\n`Sep 27, 2023`{=html}\nRehabot Eyassu\n\n\n\n\n  \n\n\n\n\nAssignment 2\n\n\n\n\n\n\n\nPaul Murrell\n\n\nGraphs\n\n\nFunctions\n\n\n\n\n\n\n\n\n\n\n\nSep 20, 2023\n\n\nRehabot, Eyassu\n\n\n\n\n\n\n  \n\n\n\n\nAssignment 1\n\n\n\n\n\n\n\nR\n\n\nCoding\n\n\nData Visualization\n\n\n\n\n\n\n\n\n\n\n\nSep 13, 2023\n\n\nRehabot Eyassu\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "photos.html",
    "href": "photos.html",
    "title": "Photos",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "posts/Assignment 1/index.html",
    "href": "posts/Assignment 1/index.html",
    "title": "Assignment 1",
    "section": "",
    "text": "Welcome! This is the first post my blog. I’ll be displaying Anscombe’s quartet, Fall.R in cyan, and critiquing a political graph."
  },
  {
    "objectID": "posts/Assignment 3/index.html",
    "href": "posts/Assignment 3/index.html",
    "title": "Assignment 3",
    "section": "",
    "text": "Changing up Anscombe’s Quartet by adding colors to the design.\n\n\nShow Hidden Code\n# ## Anscombe (1973) Quartlet\n\n\n# data(anscombe)  # Load Anscombe's data\n# View(anscombe) # View the data\n# summary(anscombe)\n# \n# ## Simple version\n# plot(anscombe$x1,anscombe$y1)\n# summary(anscombe)\n# \n# # Create four model objects\n# lm1 &lt;- lm(y1 ~ x1, data=anscombe)\n# summary(lm1)\n# lm2 &lt;- lm(y2 ~ x2, data=anscombe)\n# summary(lm2)\n# lm3 &lt;- lm(y3 ~ x3, data=anscombe)\n# summary(lm3)\n# lm4 &lt;- lm(y4 ~ x4, data=anscombe)\n# summary(lm4)\n# plot(anscombe$x1,anscombe$y1)\n# abline(coefficients(lm1))\n# plot(anscombe$x2,anscombe$y2)\n# abline(coefficients(lm2))\n# plot(anscombe$x3,anscombe$y3)\n# abline(coefficients(lm3))\n# plot(anscombe$x4,anscombe$y4)\n# abline(coefficients(lm4))\n# \n# \n# ## Fancy version (per help file)\n# \n# ff &lt;- y ~ x\n# mods &lt;- setNames(as.list(1:4), paste0(\"lm\", 1:4))\n# \n# # Plot using for loop\n# for(i in 1:4) {\n#   ff[2:3] &lt;- lapply(paste0(c(\"y\",\"x\"), i), as.name)\n#   ## or   ff[[2]] &lt;- as.name(paste0(\"y\", i))\n#   ##      ff[[3]] &lt;- as.name(paste0(\"x\", i))\n#   mods[[i]] &lt;- lmi &lt;- lm(ff, data = anscombe)\n#   print(anova(lmi))\n# }\n# \n# sapply(mods, coef)  # Note the use of this function\n# lapply(mods, function(fm) coef(summary(fm)))\n# \n# # Preparing for the plots\n# op &lt;- par(mfrow = c(2, 2), mar = 0.1+c(4,4,1,1), oma =  c(0, 0, 2, 0))\n# \n# # Plot charts using for loop\n# for(i in 1:4) {\n#   ff[2:3] &lt;- lapply(paste0(c(\"y\",\"x\"), i), as.name)\n#   plot(ff, data = anscombe, col = \"red\", pch = 21, bg = \"orange\", cex = 1.2,\n#        xlim = c(3, 19), ylim = c(3, 13))\n#   abline(mods[[i]], col = \"blue\")\n# }\n# mtext(\"Anscombe's 4 Regression data sets\", outer = TRUE, cex = 1.5)\n# par(op)\n# \n\ndata(anscombe)\n\n## Define line types, colors, and background colors\nline_types &lt;- c(1, 2, 3, 4)  # Use different line types (1 = solid, 2 = dashed, 3 = dotted, 4 = dotdash)\nline_colors &lt;- c(\"darkred\", \"chartreuse3\", \"cyan4\", \"darkmagenta\")  # Use different line colors\nbg_colors &lt;- c(\"cadetblue1\", \"darkseagreen1\", \"beige\", \"lightpink\")  # Use different background colors\n\n# Define the formula 'ff' for regression\nff &lt;- y ~ x\n\n# Create four model objects and plots\nop &lt;- par(mfrow = c(2, 2), mar = 0.1+c(4,4,1,1), oma = c(0, 0, 2, 0))\n\nfor (i in 1:4) {\n  ff[2:3] &lt;- lapply(paste0(c(\"y\",\"x\"), i), as.name)\n  lmi &lt;- lm(ff, data = anscombe)\n\n  # Customize the plot using the defined line types, colors, and background colors\n  plot(ff, data = anscombe, col = line_colors[i], pch = 21, bg = bg_colors[i], cex = 1.2,\n       xlim = c(3, 19), ylim = c(3, 13))\n  abline(lmi, col = line_colors[i], lty = line_types[i])\n}\n\nmtext(\"Anscombe's 4 Regression data sets\", outer = TRUE, cex = 1.5)\n\n\n\n\n\nShow Hidden Code\npar(op)"
  },
  {
    "objectID": "profile.html",
    "href": "profile.html",
    "title": "Profile",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "projects.html",
    "href": "projects.html",
    "title": "Projects",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "posts/Assignment 1/index.html#anscombes-quartet",
    "href": "posts/Assignment 1/index.html#anscombes-quartet",
    "title": "Assignment 1",
    "section": "Anscombe’s Quartet",
    "text": "Anscombe’s Quartet\nThis is a Quarto website.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites.\n\n#| code-fold: true \n#| code-summary: \"Show Hidden Code\"\n\n## Anscombe (1973) Quartlet\n\ndata(anscombe)  # Load Anscombe's data\nView(anscombe) # View the data\nsummary(anscombe)\n\n       x1             x2             x3             x4           y1        \n Min.   : 4.0   Min.   : 4.0   Min.   : 4.0   Min.   : 8   Min.   : 4.260  \n 1st Qu.: 6.5   1st Qu.: 6.5   1st Qu.: 6.5   1st Qu.: 8   1st Qu.: 6.315  \n Median : 9.0   Median : 9.0   Median : 9.0   Median : 8   Median : 7.580  \n Mean   : 9.0   Mean   : 9.0   Mean   : 9.0   Mean   : 9   Mean   : 7.501  \n 3rd Qu.:11.5   3rd Qu.:11.5   3rd Qu.:11.5   3rd Qu.: 8   3rd Qu.: 8.570  \n Max.   :14.0   Max.   :14.0   Max.   :14.0   Max.   :19   Max.   :10.840  \n       y2              y3              y4        \n Min.   :3.100   Min.   : 5.39   Min.   : 5.250  \n 1st Qu.:6.695   1st Qu.: 6.25   1st Qu.: 6.170  \n Median :8.140   Median : 7.11   Median : 7.040  \n Mean   :7.501   Mean   : 7.50   Mean   : 7.501  \n 3rd Qu.:8.950   3rd Qu.: 7.98   3rd Qu.: 8.190  \n Max.   :9.260   Max.   :12.74   Max.   :12.500  \n\n## Simple version\nplot(anscombe$x1,anscombe$y1)\nsummary(anscombe)\n\n       x1             x2             x3             x4           y1        \n Min.   : 4.0   Min.   : 4.0   Min.   : 4.0   Min.   : 8   Min.   : 4.260  \n 1st Qu.: 6.5   1st Qu.: 6.5   1st Qu.: 6.5   1st Qu.: 8   1st Qu.: 6.315  \n Median : 9.0   Median : 9.0   Median : 9.0   Median : 8   Median : 7.580  \n Mean   : 9.0   Mean   : 9.0   Mean   : 9.0   Mean   : 9   Mean   : 7.501  \n 3rd Qu.:11.5   3rd Qu.:11.5   3rd Qu.:11.5   3rd Qu.: 8   3rd Qu.: 8.570  \n Max.   :14.0   Max.   :14.0   Max.   :14.0   Max.   :19   Max.   :10.840  \n       y2              y3              y4        \n Min.   :3.100   Min.   : 5.39   Min.   : 5.250  \n 1st Qu.:6.695   1st Qu.: 6.25   1st Qu.: 6.170  \n Median :8.140   Median : 7.11   Median : 7.040  \n Mean   :7.501   Mean   : 7.50   Mean   : 7.501  \n 3rd Qu.:8.950   3rd Qu.: 7.98   3rd Qu.: 8.190  \n Max.   :9.260   Max.   :12.74   Max.   :12.500  \n\n# Create four model objects\nlm1 &lt;- lm(y1 ~ x1, data=anscombe)\nsummary(lm1)\n\n\nCall:\nlm(formula = y1 ~ x1, data = anscombe)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-1.92127 -0.45577 -0.04136  0.70941  1.83882 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)   \n(Intercept)   3.0001     1.1247   2.667  0.02573 * \nx1            0.5001     0.1179   4.241  0.00217 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.237 on 9 degrees of freedom\nMultiple R-squared:  0.6665,    Adjusted R-squared:  0.6295 \nF-statistic: 17.99 on 1 and 9 DF,  p-value: 0.00217\n\nlm2 &lt;- lm(y2 ~ x2, data=anscombe)\nsummary(lm2)\n\n\nCall:\nlm(formula = y2 ~ x2, data = anscombe)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-1.9009 -0.7609  0.1291  0.9491  1.2691 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)   \n(Intercept)    3.001      1.125   2.667  0.02576 * \nx2             0.500      0.118   4.239  0.00218 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.237 on 9 degrees of freedom\nMultiple R-squared:  0.6662,    Adjusted R-squared:  0.6292 \nF-statistic: 17.97 on 1 and 9 DF,  p-value: 0.002179\n\nlm3 &lt;- lm(y3 ~ x3, data=anscombe)\nsummary(lm3)\n\n\nCall:\nlm(formula = y3 ~ x3, data = anscombe)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-1.1586 -0.6146 -0.2303  0.1540  3.2411 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)   \n(Intercept)   3.0025     1.1245   2.670  0.02562 * \nx3            0.4997     0.1179   4.239  0.00218 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.236 on 9 degrees of freedom\nMultiple R-squared:  0.6663,    Adjusted R-squared:  0.6292 \nF-statistic: 17.97 on 1 and 9 DF,  p-value: 0.002176\n\nlm4 &lt;- lm(y4 ~ x4, data=anscombe)\nsummary(lm4)\n\n\nCall:\nlm(formula = y4 ~ x4, data = anscombe)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n-1.751 -0.831  0.000  0.809  1.839 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)   \n(Intercept)   3.0017     1.1239   2.671  0.02559 * \nx4            0.4999     0.1178   4.243  0.00216 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.236 on 9 degrees of freedom\nMultiple R-squared:  0.6667,    Adjusted R-squared:  0.6297 \nF-statistic:    18 on 1 and 9 DF,  p-value: 0.002165\n\nplot(anscombe$x1,anscombe$y1)\nabline(coefficients(lm1))\n\n\n\nplot(anscombe$x2,anscombe$y2)\nabline(coefficients(lm2))\n\n\n\nplot(anscombe$x3,anscombe$y3)\nabline(coefficients(lm3))\n\n\n\nplot(anscombe$x4,anscombe$y4)\nabline(coefficients(lm4))\n\n\n\n## Fancy version (per help file)\n\nff &lt;- y ~ x\nmods &lt;- setNames(as.list(1:4), paste0(\"lm\", 1:4))\n\n# Plot using for loop\nfor(i in 1:4) {\n  ff[2:3] &lt;- lapply(paste0(c(\"y\",\"x\"), i), as.name)\n  ## or   ff[[2]] &lt;- as.name(paste0(\"y\", i))\n  ##      ff[[3]] &lt;- as.name(paste0(\"x\", i))\n  mods[[i]] &lt;- lmi &lt;- lm(ff, data = anscombe)\n  print(anova(lmi))\n}\n\nAnalysis of Variance Table\n\nResponse: y1\n          Df Sum Sq Mean Sq F value  Pr(&gt;F)   \nx1         1 27.510 27.5100   17.99 0.00217 **\nResiduals  9 13.763  1.5292                   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\nAnalysis of Variance Table\n\nResponse: y2\n          Df Sum Sq Mean Sq F value   Pr(&gt;F)   \nx2         1 27.500 27.5000  17.966 0.002179 **\nResiduals  9 13.776  1.5307                    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\nAnalysis of Variance Table\n\nResponse: y3\n          Df Sum Sq Mean Sq F value   Pr(&gt;F)   \nx3         1 27.470 27.4700  17.972 0.002176 **\nResiduals  9 13.756  1.5285                    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\nAnalysis of Variance Table\n\nResponse: y4\n          Df Sum Sq Mean Sq F value   Pr(&gt;F)   \nx4         1 27.490 27.4900  18.003 0.002165 **\nResiduals  9 13.742  1.5269                    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nsapply(mods, coef)  # Note the use of this function\n\n                  lm1      lm2       lm3       lm4\n(Intercept) 3.0000909 3.000909 3.0024545 3.0017273\nx1          0.5000909 0.500000 0.4997273 0.4999091\n\nlapply(mods, function(fm) coef(summary(fm)))\n\n$lm1\n             Estimate Std. Error  t value    Pr(&gt;|t|)\n(Intercept) 3.0000909  1.1247468 2.667348 0.025734051\nx1          0.5000909  0.1179055 4.241455 0.002169629\n\n$lm2\n            Estimate Std. Error  t value    Pr(&gt;|t|)\n(Intercept) 3.000909  1.1253024 2.666758 0.025758941\nx2          0.500000  0.1179637 4.238590 0.002178816\n\n$lm3\n             Estimate Std. Error  t value    Pr(&gt;|t|)\n(Intercept) 3.0024545  1.1244812 2.670080 0.025619109\nx3          0.4997273  0.1178777 4.239372 0.002176305\n\n$lm4\n             Estimate Std. Error  t value    Pr(&gt;|t|)\n(Intercept) 3.0017273  1.1239211 2.670763 0.025590425\nx4          0.4999091  0.1178189 4.243028 0.002164602\n\n# Preparing for the plots\nop &lt;- par(mfrow = c(2, 2), mar = 0.1+c(4,4,1,1), oma =  c(0, 0, 2, 0))\n\n# Plot charts using for loop\nfor(i in 1:4) {\n  ff[2:3] &lt;- lapply(paste0(c(\"y\",\"x\"), i), as.name)\n  plot(ff, data = anscombe, col = \"red\", pch = 21, bg = \"orange\", cex = 1.2,\n       xlim = c(3, 19), ylim = c(3, 13))\n  abline(mods[[i]], col = \"blue\")\n}\nmtext(\"Anscombe's 4 Regression data sets\", outer = TRUE, cex = 1.5)\n\n\n\npar(op)"
  },
  {
    "objectID": "posts/Assignment 2 /index.html",
    "href": "posts/Assignment 2 /index.html",
    "title": "Assignment 2",
    "section": "",
    "text": "Show Hidden Code\n#DATA\n\ndata &lt;- data.frame(\n  Year = rep(2011:2020, 3),  # Years from 2006 to 2016\n  Country = rep(c(\"Mali\", \"Mexico\", \"Morocco\"), each = 10),  # Country names\n  HPI = c(\n     34, 33, 30, 31, 35, 33, 37, 36, 39, 38,  # Mali\n     58, 58, 61, 56, 53, 57, 54, 55, 54, 52, # Mexico\n     51, 50, 51, 51, 51, 54, 53, 49, 50, 49  # Morocco\n  )\n)\n\n#NECCESSARY PACKAGES\n\nlibrary(ggplot2)\n\n#Creating a Scatter Plot\nggplot(data, aes(x = Year, y = HPI, color = Country)) +\n  geom_point() +               #Add points\n  geom_line() +                # Add lines\n  labs(title = \"HPI Score Over 10 Years\", x = \"Year\", y = \"HPI Score\") +\n  scale_color_manual(values = c(\"Mali\" = \"cyan4\", \"Mexico\" = \"gold4\", \"Morocco\" = \"red4\"))\n\n\n\n\n\nShow Hidden Code\n#ggplot(data, aes(x = Year, y = LifeExpectancy, color = Country)) specifies the data frame and the mapping of variables to the x-axis, y-axis, and color aesthetic.\n#geom_point() adds the points to the plot.\n#labs() sets the title and axis labels.\n#scale_color_manual() customizes the colors for each country in the legend.\n\n\nThis is a graph depicting the 10-year trend in HPI (Happy Planet Index) scores for three countries: Morocco, Mali, and Mexico."
  },
  {
    "objectID": "posts/Assignment 1/index 2.html",
    "href": "posts/Assignment 1/index 2.html",
    "title": "Test",
    "section": "",
    "text": "This is a Quarto website.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites.\n\n## Anscombe (1973) Quartlet\n\ndata(anscombe)  # Load Anscombe's data\nView(anscombe) # View the data\nsummary(anscombe)\n\n       x1             x2             x3             x4           y1        \n Min.   : 4.0   Min.   : 4.0   Min.   : 4.0   Min.   : 8   Min.   : 4.260  \n 1st Qu.: 6.5   1st Qu.: 6.5   1st Qu.: 6.5   1st Qu.: 8   1st Qu.: 6.315  \n Median : 9.0   Median : 9.0   Median : 9.0   Median : 8   Median : 7.580  \n Mean   : 9.0   Mean   : 9.0   Mean   : 9.0   Mean   : 9   Mean   : 7.501  \n 3rd Qu.:11.5   3rd Qu.:11.5   3rd Qu.:11.5   3rd Qu.: 8   3rd Qu.: 8.570  \n Max.   :14.0   Max.   :14.0   Max.   :14.0   Max.   :19   Max.   :10.840  \n       y2              y3              y4        \n Min.   :3.100   Min.   : 5.39   Min.   : 5.250  \n 1st Qu.:6.695   1st Qu.: 6.25   1st Qu.: 6.170  \n Median :8.140   Median : 7.11   Median : 7.040  \n Mean   :7.501   Mean   : 7.50   Mean   : 7.501  \n 3rd Qu.:8.950   3rd Qu.: 7.98   3rd Qu.: 8.190  \n Max.   :9.260   Max.   :12.74   Max.   :12.500  \n\n## Simple version\nplot(anscombe$x1,anscombe$y1)\nsummary(anscombe)\n\n       x1             x2             x3             x4           y1        \n Min.   : 4.0   Min.   : 4.0   Min.   : 4.0   Min.   : 8   Min.   : 4.260  \n 1st Qu.: 6.5   1st Qu.: 6.5   1st Qu.: 6.5   1st Qu.: 8   1st Qu.: 6.315  \n Median : 9.0   Median : 9.0   Median : 9.0   Median : 8   Median : 7.580  \n Mean   : 9.0   Mean   : 9.0   Mean   : 9.0   Mean   : 9   Mean   : 7.501  \n 3rd Qu.:11.5   3rd Qu.:11.5   3rd Qu.:11.5   3rd Qu.: 8   3rd Qu.: 8.570  \n Max.   :14.0   Max.   :14.0   Max.   :14.0   Max.   :19   Max.   :10.840  \n       y2              y3              y4        \n Min.   :3.100   Min.   : 5.39   Min.   : 5.250  \n 1st Qu.:6.695   1st Qu.: 6.25   1st Qu.: 6.170  \n Median :8.140   Median : 7.11   Median : 7.040  \n Mean   :7.501   Mean   : 7.50   Mean   : 7.501  \n 3rd Qu.:8.950   3rd Qu.: 7.98   3rd Qu.: 8.190  \n Max.   :9.260   Max.   :12.74   Max.   :12.500  \n\n# Create four model objects\nlm1 &lt;- lm(y1 ~ x1, data=anscombe)\nsummary(lm1)\n\n\nCall:\nlm(formula = y1 ~ x1, data = anscombe)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-1.92127 -0.45577 -0.04136  0.70941  1.83882 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)   \n(Intercept)   3.0001     1.1247   2.667  0.02573 * \nx1            0.5001     0.1179   4.241  0.00217 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.237 on 9 degrees of freedom\nMultiple R-squared:  0.6665,    Adjusted R-squared:  0.6295 \nF-statistic: 17.99 on 1 and 9 DF,  p-value: 0.00217\n\nlm2 &lt;- lm(y2 ~ x2, data=anscombe)\nsummary(lm2)\n\n\nCall:\nlm(formula = y2 ~ x2, data = anscombe)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-1.9009 -0.7609  0.1291  0.9491  1.2691 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)   \n(Intercept)    3.001      1.125   2.667  0.02576 * \nx2             0.500      0.118   4.239  0.00218 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.237 on 9 degrees of freedom\nMultiple R-squared:  0.6662,    Adjusted R-squared:  0.6292 \nF-statistic: 17.97 on 1 and 9 DF,  p-value: 0.002179\n\nlm3 &lt;- lm(y3 ~ x3, data=anscombe)\nsummary(lm3)\n\n\nCall:\nlm(formula = y3 ~ x3, data = anscombe)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-1.1586 -0.6146 -0.2303  0.1540  3.2411 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)   \n(Intercept)   3.0025     1.1245   2.670  0.02562 * \nx3            0.4997     0.1179   4.239  0.00218 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.236 on 9 degrees of freedom\nMultiple R-squared:  0.6663,    Adjusted R-squared:  0.6292 \nF-statistic: 17.97 on 1 and 9 DF,  p-value: 0.002176\n\nlm4 &lt;- lm(y4 ~ x4, data=anscombe)\nsummary(lm4)\n\n\nCall:\nlm(formula = y4 ~ x4, data = anscombe)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n-1.751 -0.831  0.000  0.809  1.839 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)   \n(Intercept)   3.0017     1.1239   2.671  0.02559 * \nx4            0.4999     0.1178   4.243  0.00216 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.236 on 9 degrees of freedom\nMultiple R-squared:  0.6667,    Adjusted R-squared:  0.6297 \nF-statistic:    18 on 1 and 9 DF,  p-value: 0.002165\n\nplot(anscombe$x1,anscombe$y1)\nabline(coefficients(lm1))\n\n\n\nplot(anscombe$x2,anscombe$y2)\nabline(coefficients(lm2))\n\n\n\nplot(anscombe$x3,anscombe$y3)\nabline(coefficients(lm3))\n\n\n\nplot(anscombe$x4,anscombe$y4)\nabline(coefficients(lm4))\n\n\n\n## Fancy version (per help file)\n\nff &lt;- y ~ x\nmods &lt;- setNames(as.list(1:4), paste0(\"lm\", 1:4))\n\n# Plot using for loop\nfor(i in 1:4) {\n  ff[2:3] &lt;- lapply(paste0(c(\"y\",\"x\"), i), as.name)\n  ## or   ff[[2]] &lt;- as.name(paste0(\"y\", i))\n  ##      ff[[3]] &lt;- as.name(paste0(\"x\", i))\n  mods[[i]] &lt;- lmi &lt;- lm(ff, data = anscombe)\n  print(anova(lmi))\n}\n\nAnalysis of Variance Table\n\nResponse: y1\n          Df Sum Sq Mean Sq F value  Pr(&gt;F)   \nx1         1 27.510 27.5100   17.99 0.00217 **\nResiduals  9 13.763  1.5292                   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\nAnalysis of Variance Table\n\nResponse: y2\n          Df Sum Sq Mean Sq F value   Pr(&gt;F)   \nx2         1 27.500 27.5000  17.966 0.002179 **\nResiduals  9 13.776  1.5307                    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\nAnalysis of Variance Table\n\nResponse: y3\n          Df Sum Sq Mean Sq F value   Pr(&gt;F)   \nx3         1 27.470 27.4700  17.972 0.002176 **\nResiduals  9 13.756  1.5285                    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\nAnalysis of Variance Table\n\nResponse: y4\n          Df Sum Sq Mean Sq F value   Pr(&gt;F)   \nx4         1 27.490 27.4900  18.003 0.002165 **\nResiduals  9 13.742  1.5269                    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nsapply(mods, coef)  # Note the use of this function\n\n                  lm1      lm2       lm3       lm4\n(Intercept) 3.0000909 3.000909 3.0024545 3.0017273\nx1          0.5000909 0.500000 0.4997273 0.4999091\n\nlapply(mods, function(fm) coef(summary(fm)))\n\n$lm1\n             Estimate Std. Error  t value    Pr(&gt;|t|)\n(Intercept) 3.0000909  1.1247468 2.667348 0.025734051\nx1          0.5000909  0.1179055 4.241455 0.002169629\n\n$lm2\n            Estimate Std. Error  t value    Pr(&gt;|t|)\n(Intercept) 3.000909  1.1253024 2.666758 0.025758941\nx2          0.500000  0.1179637 4.238590 0.002178816\n\n$lm3\n             Estimate Std. Error  t value    Pr(&gt;|t|)\n(Intercept) 3.0024545  1.1244812 2.670080 0.025619109\nx3          0.4997273  0.1178777 4.239372 0.002176305\n\n$lm4\n             Estimate Std. Error  t value    Pr(&gt;|t|)\n(Intercept) 3.0017273  1.1239211 2.670763 0.025590425\nx4          0.4999091  0.1178189 4.243028 0.002164602\n\n# Preparing for the plots\nop &lt;- par(mfrow = c(2, 2), mar = 0.1+c(4,4,1,1), oma =  c(0, 0, 2, 0))\n\n# Plot charts using for loop\nfor(i in 1:4) {\n  ff[2:3] &lt;- lapply(paste0(c(\"y\",\"x\"), i), as.name)\n  plot(ff, data = anscombe, col = \"red\", pch = 21, bg = \"orange\", cex = 1.2,\n       xlim = c(3, 19), ylim = c(3, 13))\n  abline(mods[[i]], col = \"blue\")\n}\nmtext(\"Anscombe's 4 Regression data sets\", outer = TRUE, cex = 1.5)\n\n\n\npar(op)"
  },
  {
    "objectID": "posts/Assignment 1/index.html#fall.r",
    "href": "posts/Assignment 1/index.html#fall.r",
    "title": "Assignment 1",
    "section": "Fall.R",
    "text": "Fall.R\n\n\nShow Hidden Code\n# # Title Fall color\n# \n# # Install packages\n# \n# install.packages(\"gsubfn\")\n# install.packages(\"tidyverse\")\n# library(gsubfn)\n# library(tidyverse)\n# \n# # Define elements in plant art\n# # Each image corresponds to a different axiom, rules, angle and depth\n# \n# # Leaf of Fall\n# \n# axiom=\"X\"\n# rules=list(\"X\"=\"F-[[X]+X]+F[+FX]-X\", \"F\"=\"FF\")\n# angle=22.5\n# depth=6\n# \n# \n# for (i in 1:depth) axiom=gsubfn(\".\", rules, axiom)\n# \n# actions=str_extract_all(axiom, \"\\\\d*\\\\+|\\\\d*\\\\-|F|L|R|\\\\[|\\\\]|\\\\|\") %&gt;% unlist\n# \n# status=data.frame(x=numeric(0), y=numeric(0), alfa=numeric(0))\n# points=data.frame(x1 = 0, y1 = 0, x2 = NA, y2 = NA, alfa=90, depth=1)\n# \n# \n# # Generating data\n# # Note: may take a minute or two\n# \n# for (action in actions)\n# {\n#   if (action==\"F\")\n#   {\n#     x=points[1, \"x1\"]+cos(points[1, \"alfa\"]*(pi/180))\n#     y=points[1, \"y1\"]+sin(points[1, \"alfa\"]*(pi/180))\n#     points[1,\"x2\"]=x\n#     points[1,\"y2\"]=y\n#     data.frame(x1 = x, y1 = y, x2 = NA, y2 = NA,\n#                alfa=points[1, \"alfa\"],\n#                depth=points[1,\"depth\"]) %&gt;% rbind(points)-&gt;points\n#   }\n#   if (action %in% c(\"+\", \"-\")){\n#     alfa=points[1, \"alfa\"]\n#     points[1, \"alfa\"]=eval(parse(text=paste0(\"alfa\",action, angle)))\n#   }\n#   if(action==\"[\"){\n#     data.frame(x=points[1, \"x1\"], y=points[1, \"y1\"], alfa=points[1, \"alfa\"]) %&gt;%\n#       rbind(status) -&gt; status\n#     points[1, \"depth\"]=points[1, \"depth\"]+1\n#   }\n# \n#   if(action==\"]\"){\n#     depth=points[1, \"depth\"]\n#     points[-1,]-&gt;points\n#     data.frame(x1=status[1, \"x\"], y1=status[1, \"y\"], x2=NA, y2=NA,\n#                alfa=status[1, \"alfa\"],\n#                depth=depth-1) %&gt;%\n#       rbind(points) -&gt; points\n#     status[-1,]-&gt;status\n#   }\n# }\n# \n# ggplot() +\n#   geom_segment(aes(x = x1, y = y1, xend = x2, yend = y2),\n#                lineend = \"round\",\n#                color=\"cyan4\", # Set your own Fall color?\n#                data=na.omit(points)) +\n#   coord_fixed(ratio = 1) +\n#   theme_void() # No grid nor axes"
  },
  {
    "objectID": "posts/Assignment 1/index.html#data-visualization-critique",
    "href": "posts/Assignment 1/index.html#data-visualization-critique",
    "title": "Assignment 1",
    "section": "Data Visualization Critique",
    "text": "Data Visualization Critique\n\nThis graph is extremely misleading due to the scaling on the y-axis. By adjusting the scale of the y-axis, the graph has been made to look more dramatic. The number of people on welfare has been made to look higher than it actually is. This is partically due to the y-axis starting at 94,000,000. Starting the y-axis with any value greater than zero exaggerates changes in data."
  },
  {
    "objectID": "posts/Assignment 2 /index.html#paul-murrells-r-examples",
    "href": "posts/Assignment 2 /index.html#paul-murrells-r-examples",
    "title": "Assignment 2",
    "section": "Paul Murrell’s R Examples",
    "text": "Paul Murrell’s R Examples\n\n\nShow Hidden Code\n# Exercise: Can you generate these charts individually?  Try these functions \n# using another dataset. Be sure to work on the layout and margins\n\n#  Examples of standard high-level plots \n#  In each case, extra output is also added using low-level \n#  plotting functions.\n\n# Scatterplot\n\n# Note the incremental additions\nx &lt;- c(0.5, 2, 4, 8, 12, 16)\ny1 &lt;- c(1, 1.3, 1.9, 3.4, 3.9, 4.8)\ny2 &lt;- c(4, .8, .5, .45, .4, .3)\n\n# Setting label orientation, margins c(bottom, left, top, right) & text size\npar(las=1, mar=c(4, 4, 2, 4), cex=.7) \n# las - oreintation\n# mar - margins - bottom, left, top and right respectively \n# cex - font size\n\nplot.new()\nplot.window(range(x), c(0, 6))\nlines(x, y1)\nlines(x, y2)\n#points(x, y1, pch=16, cex=2) # Try different cex value?  \n#These commands plot points at the coordinates specified by x and y1. The pch parameter specifies the type of point (16 is a solid circle), and cex controls the size of the points.\n\npoints(x, y1, pch=21, bg =\"red4\", cex=1.7) \n#points(x, y1, pch=16, cex=1.7) - this was the code before I changed it\npoints(x, y2, pch=21, bg=\"cyan4\", cex=2)  # Different background color\n#bg - changes the color of the points\n#Similar to the above, but with a different point type (21 is a filled circle with a white, now cyan4 background).\n\npar(col=\"blue3\", fg=\"gold4\", col.axis=\"red4\")\n#This sets various graphical parameters, such as line and text colors, to gray50.\n# col - ???\n# fg - color of all the wording on the graph- gold4\n# col.axis - color of the numbers on the axis - red4\n\naxis(1, at=seq(0, 16, 4)) # What is the first number standing for?\n#This draws the x-axis with tick marks at specified positions.\naxis(2, at=seq(0, 6, 2))\n#This draws the left y-axis with tick marks.\naxis(4, at=seq(0, 6, 2))\n#This draws the right y-axis with tick marks.\nbox(bty=\"u\")\n#This adds a box around the plot with the upper portion of the box open (\"u\" stands for \"upper\").\n\nmtext(\"Travel Time (s)\", side=1, line=2, cex=0.8)\nmtext(\"Responses per Travel\", side=2, line=2, las=0, cex=0.8)\nmtext(\"Responses per Second\", side=4, line=2, las=0, cex=0.8)\n# mtext(): These functions add text labels to the margins\ntext(4, 5, \"Bird 131\")\n\n\n\n\n\nShow Hidden Code\n#text(4, 5, \"Bird 131\"): This adds a text label \"Bird 131\" at the coordinates (4, 5)\n\npar(mar=c(5.1, 4.1, 4.1, 2.1), col=\"black\", fg=\"black\", col.axis=\"black\")\n#This command modifies the margin and graphical parameters for the plot's labels.\n#This code snippet is creating a customized scatter plot with various labels, tick marks, and styles. The par() function is used to set graphical parameters, and different functions like lines(), points(), and mtext() are used to add elements to the plot.\n\n\n\n# Histogram\n\n#Data\nY &lt;- rnorm(50)\n# Random data\n# Y - is created as a vector of 50 random numbers generated from a standard normal distribution (mean = 0, standard deviation = 1).\nY[Y &lt; -3.5 | Y &gt; 3.5] &lt;- NA # Selection/set range\n# Make sure no Y exceed [-3.5, 3.5]\n# This code snippet ensures that any values in Y that fall outside the range [-3.5, 3.5] are set to NA (missing values).\nx &lt;- seq(-3.5, 3.5, .1)\n#x is created as a sequence of values from -3.5 to 3.5 in increments of 0.1.\ndn &lt;- dnorm(x)\n#dn is the density of the standard normal distribution (mean = 0, standard deviation = 1) at the values specified in x.\n\n#Margins\npar(mar=c(4.5, 4.1, 3.1, 0))\n#This sets the margin size for the plot. The four values represent the bottom, left, top, and right margins, respectively.\n\n#Bars\nhist(Y, breaks=seq(-3.5, 3.5), ylim=c(0, 0.5), \n     col=\"cyan4\", fg = \"red4\", col.axis = \"cyan4\", freq=FALSE)\n#hist(Y, breaks=seq(-3.5, 3.5) - creates a histogram of the data in Y, specifying the breaks (bin boundaries) using the seq(-3.5, 3.5) sequence.\n#ylim=c(0, 0.5) - sets the y-axis limits.\n# col=\"gray80\" - sets the color of the bars in the histogram to a shade of gray.\n# freq=FALSE - ensures that the y-axis represents densities rather than frequencies.\n\n#Distribution Line\nlines(x, dnorm(x), col = \"gold4\", lwd=2)\n\n\n\n\n\nShow Hidden Code\n#lines(x, dnorm(x), lwd=2) overlays a density plot on top of the histogram. It plots the density of the standard normal distribution over the specified x values and uses a line with a width of 2.\n\npar(mar=c(5.1, 4.1, 4.1, 2.1))\n#This command modifies the margin size for the plot's labels.\n\n\n\n# Barplot\n\npar(mar=c(2, 3.1, 2, 2.1))  # Set the background color to lightgreen \n#par(mar=c(2, 3.1, 2, 2.1)): This sets the margin size for the plot. The four values represent the bottom, left, top, and right margins, respectively.\n\n\n\n midpts &lt;- barplot(VADeaths, \n                 col=gray(0.1 + seq(1, 9, 2)/11), \n             names=rep(\"\", 4))\n\n\n#barplot(VADeaths, col=gray(0.1 + seq(1, 9, 2)/11), names=rep(\"\", 4)): This command creates a barplot. It takes the data in the VADeaths dataset, specifies the bar colors using the col argument (using varying shades of gray), and sets the names of the bars to be empty strings.\n\nmtext(sub(\" \", \"\\n\", colnames(VADeaths)),\n      at=midpts, side=1, line=0.5, col.axis=\"gold4\", cex=0.5)\n#mtext(sub(\" \", \"\\n\", colnames(VADeaths)), at=midpts, side=1, line=0.5, cex=0.5): This code adds text labels to the x-axis (side=1). The sub(\" \", \"\\n\", colnames(VADeaths)) part replaces spaces in the column names of the VADeaths dataset with newline characters (\"\\n\"). This essentially creates line breaks in the x-axis labels.\n\ntext(rep(midpts, each=5), apply(VADeaths, 2, cumsum) - VADeaths/2,\n     VADeaths, \n     col=rep(c(\"yellow\", \"blue4\"), times=3:2), \n     cex=0.8)\n\n\n\n\n\nShow Hidden Code\n#text(...) - adds text labels to the bars in the barplot.\n#rep(midpts, each=5) - creates a vector of x-coordinates for the labels.\n#apply(VADeaths, 2, cumsum) - VADeaths/2 calculates the y-coordinates for the labels, positioning them in the center of each bar.\n# VADeaths provides the labels.\n# col=rep(c(\"white\", \"black\"), times=3:2) specifies the colors of the labels. It alternates between white and black text colors.\n# cex=0.8 controls the size of the text labels.\n\npar(mar=c(5.1, 4.1, 4.1, 2.1))  \n#This command modifies the margin size for the plot's labels.\n\n\n\n# Boxplot\npar(mar=c(3, 4.1, 2, 0))\nboxplot(len ~ dose, data = ToothGrowth,\n        boxwex = 0.25, at = 1:3 - 0.2,\n        subset= supp == \"VC\", col=\"white\",\n        xlab=\"\",\n        ylab=\"tooth length\", ylim=c(0,35))\nmtext(\"Vitamin C dose (mg)\", side=1, line=2.5, cex=0.8)\nboxplot(len ~ dose, data = ToothGrowth, add = TRUE,\n        boxwex = 0.25, at = 1:3 + 0.2,\n        \n        subset= supp == \"OJ\")\nlegend(1.5, 9, c(\"Ascorbic acid\", \"Orange juice\"), \n       fill = c(\"white\", \"gray\"), \n       bty=\"n\")\n\n\n\n\n\nShow Hidden Code\npar(mar=c(5.1, 4.1, 4.1, 2.1))\n\n# Persp\nx &lt;- seq(-10, 10, length= 30)\ny &lt;- x\nf &lt;- function(x,y) { r &lt;- sqrt(x^2+y^2); 10 * sin(r)/r }\nz &lt;- outer(x, y, f)\nz[is.na(z)] &lt;- 1\n# 0.5 to include z axis label\npar(mar=c(0, 0.5, 0, 0), lwd=0.5)\npersp(x, y, z, theta = 30, phi = 30, \n      expand = 0.5)\n\n\n\n\n\nShow Hidden Code\npar(mar=c(5.1, 4.1, 4.1, 2.1), lwd=1)\n\n# Piechart\npar(mar=c(0, 2, 1, 2), xpd=FALSE, cex=0.5)\npie.sales &lt;- c(0.12, 0.3, 0.26, 0.16, 0.04, 0.12)\nnames(pie.sales) &lt;- c(\"Blueberry\", \"Cherry\",\n                      \"Apple\", \"Boston Cream\", \"Other\", \"Vanilla\")\npie(pie.sales, col = gray(seq(0.3,1.0,length=6))) \n\n\n\n\n\nShow Hidden Code\n### Paul Murrell's R examples (selected)\n\n## Start plotting from basics \n# Note the order\nplot(pressure, pch=20)  # Can you change pch?\ntext(150, 600, \n     \"Pressure (mm Hg)\\nversus\\nTemperature (Celsius)\")\n\n\n\n\n\nShow Hidden Code\n# Setting the parameter (3 rows by 2 cols)\npar(mfrow=c(3, 2))"
  },
  {
    "objectID": "posts/Assignment 2 /index.html#happy-planet",
    "href": "posts/Assignment 2 /index.html#happy-planet",
    "title": "Assignment 2",
    "section": "Happy Planet",
    "text": "Happy Planet\nCountries\n\n##\n#| code-fold: true \n#| code-summary: \"Show Hidden Code\"\n#DATA\n\ndata &lt;- data.frame(\n  Year = rep(2011:2020, 3),  # Years from 2006 to 2016\n  Country = rep(c(\"Mali\", \"Mexico\", \"Morocco\"), each = 10),  # Country names\n  HPI = c(\n     34, 33, 30, 31, 35, 33, 37, 36, 39, 38,  # Mali\n     58, 58, 61, 56, 53, 57, 54, 55, 54, 52, # Mexico\n     51, 50, 51, 51, 51, 54, 53, 49, 50, 49  # Morocco\n  )\n)\n\n#NECCESSARY PACKAGES\n\nlibrary(ggplot2)\n\n#Creating a Scatter Plot\nggplot(data, aes(x = Year, y = HPI, color = Country)) +\n  geom_point() +               #Add points\n  geom_line() +                # Add lines\n  labs(title = \"HPI Score Over 10 Years\", x = \"Year\", y = \"HPI Score\") +\n  scale_color_manual(values = c(\"Mali\" = \"cyan4\", \"Mexico\" = \"gold4\", \"Morocco\" = \"red4\"))\n\n\n\n#ggplot(data, aes(x = Year, y = LifeExpectancy, color = Country)) specifies the data frame and the mapping of variables to the x-axis, y-axis, and color aesthetic.\n#geom_point() adds the points to the plot.\n#labs() sets the title and axis labels.\n#scale_color_manual() customizes the colors for each country in the legend."
  },
  {
    "objectID": "posts/Assignment 2 /index.html#happy-planet-index-score",
    "href": "posts/Assignment 2 /index.html#happy-planet-index-score",
    "title": "Assignment 2",
    "section": "",
    "text": "Show Hidden Code\n#DATA\n\ndata &lt;- data.frame(\n  Year = rep(2011:2020, 3),  # Years from 2006 to 2016\n  Country = rep(c(\"Mali\", \"Mexico\", \"Morocco\"), each = 10),  # Country names\n  HPI = c(\n     34, 33, 30, 31, 35, 33, 37, 36, 39, 38,  # Mali\n     58, 58, 61, 56, 53, 57, 54, 55, 54, 52, # Mexico\n     51, 50, 51, 51, 51, 54, 53, 49, 50, 49  # Morocco\n  )\n)\n\n#NECCESSARY PACKAGES\n\nlibrary(ggplot2)\n\n#Creating a Scatter Plot\nggplot(data, aes(x = Year, y = HPI, color = Country)) +\n  geom_point() +               #Add points\n  geom_line() +                # Add lines\n  labs(title = \"HPI Score Over 10 Years\", x = \"Year\", y = \"HPI Score\") +\n  scale_color_manual(values = c(\"Mali\" = \"cyan4\", \"Mexico\" = \"gold4\", \"Morocco\" = \"red4\"))\n\n\n\n\n\nShow Hidden Code\n#ggplot(data, aes(x = Year, y = LifeExpectancy, color = Country)) specifies the data frame and the mapping of variables to the x-axis, y-axis, and color aesthetic.\n#geom_point() adds the points to the plot.\n#labs() sets the title and axis labels.\n#scale_color_manual() customizes the colors for each country in the legend.\n\n\nThis is a graph depicting the 10-year trend in HPI (Happy Planet Index) scores for three countries: Morocco, Mali, and Mexico."
  },
  {
    "objectID": "posts/Assignment 3/index.html#recreating-anscombes-quartet",
    "href": "posts/Assignment 3/index.html#recreating-anscombes-quartet",
    "title": "Assignment 3",
    "section": "",
    "text": "Changing up Anscombe’s Quartet by adding colors to the design.\n\n\nShow Hidden Code\n# ## Anscombe (1973) Quartlet\n\n\n# data(anscombe)  # Load Anscombe's data\n# View(anscombe) # View the data\n# summary(anscombe)\n# \n# ## Simple version\n# plot(anscombe$x1,anscombe$y1)\n# summary(anscombe)\n# \n# # Create four model objects\n# lm1 &lt;- lm(y1 ~ x1, data=anscombe)\n# summary(lm1)\n# lm2 &lt;- lm(y2 ~ x2, data=anscombe)\n# summary(lm2)\n# lm3 &lt;- lm(y3 ~ x3, data=anscombe)\n# summary(lm3)\n# lm4 &lt;- lm(y4 ~ x4, data=anscombe)\n# summary(lm4)\n# plot(anscombe$x1,anscombe$y1)\n# abline(coefficients(lm1))\n# plot(anscombe$x2,anscombe$y2)\n# abline(coefficients(lm2))\n# plot(anscombe$x3,anscombe$y3)\n# abline(coefficients(lm3))\n# plot(anscombe$x4,anscombe$y4)\n# abline(coefficients(lm4))\n# \n# \n# ## Fancy version (per help file)\n# \n# ff &lt;- y ~ x\n# mods &lt;- setNames(as.list(1:4), paste0(\"lm\", 1:4))\n# \n# # Plot using for loop\n# for(i in 1:4) {\n#   ff[2:3] &lt;- lapply(paste0(c(\"y\",\"x\"), i), as.name)\n#   ## or   ff[[2]] &lt;- as.name(paste0(\"y\", i))\n#   ##      ff[[3]] &lt;- as.name(paste0(\"x\", i))\n#   mods[[i]] &lt;- lmi &lt;- lm(ff, data = anscombe)\n#   print(anova(lmi))\n# }\n# \n# sapply(mods, coef)  # Note the use of this function\n# lapply(mods, function(fm) coef(summary(fm)))\n# \n# # Preparing for the plots\n# op &lt;- par(mfrow = c(2, 2), mar = 0.1+c(4,4,1,1), oma =  c(0, 0, 2, 0))\n# \n# # Plot charts using for loop\n# for(i in 1:4) {\n#   ff[2:3] &lt;- lapply(paste0(c(\"y\",\"x\"), i), as.name)\n#   plot(ff, data = anscombe, col = \"red\", pch = 21, bg = \"orange\", cex = 1.2,\n#        xlim = c(3, 19), ylim = c(3, 13))\n#   abline(mods[[i]], col = \"blue\")\n# }\n# mtext(\"Anscombe's 4 Regression data sets\", outer = TRUE, cex = 1.5)\n# par(op)\n# \n\ndata(anscombe)\n\n## Define line types, colors, and background colors\nline_types &lt;- c(1, 2, 3, 4)  # Use different line types (1 = solid, 2 = dashed, 3 = dotted, 4 = dotdash)\nline_colors &lt;- c(\"darkred\", \"chartreuse3\", \"cyan4\", \"darkmagenta\")  # Use different line colors\nbg_colors &lt;- c(\"cadetblue1\", \"darkseagreen1\", \"beige\", \"lightpink\")  # Use different background colors\n\n# Define the formula 'ff' for regression\nff &lt;- y ~ x\n\n# Create four model objects and plots\nop &lt;- par(mfrow = c(2, 2), mar = 0.1+c(4,4,1,1), oma = c(0, 0, 2, 0))\n\nfor (i in 1:4) {\n  ff[2:3] &lt;- lapply(paste0(c(\"y\",\"x\"), i), as.name)\n  lmi &lt;- lm(ff, data = anscombe)\n\n  # Customize the plot using the defined line types, colors, and background colors\n  plot(ff, data = anscombe, col = line_colors[i], pch = 21, bg = bg_colors[i], cex = 1.2,\n       xlim = c(3, 19), ylim = c(3, 13))\n  abline(lmi, col = line_colors[i], lty = line_types[i])\n}\n\nmtext(\"Anscombe's 4 Regression data sets\", outer = TRUE, cex = 1.5)\n\n\n\n\n\nShow Hidden Code\npar(op)"
  },
  {
    "objectID": "posts/Assignment 3/index.html#scatter-plot-matrix-replication",
    "href": "posts/Assignment 3/index.html#scatter-plot-matrix-replication",
    "title": "Assignment 3",
    "section": "Scatter Plot Matrix Replication",
    "text": "Scatter Plot Matrix Replication\n\n\nShow Hidden Code\n# \n# # Load the required library\n# library(readr)\n# \n# # Define the URL of the raw CSV data file\n# url &lt;- \"https://raw.githubusercontent.com/owid/covid-19-data/master/public/data/owid-covid-data.csv\"\n# \n# # Download the data and read it into a data frame\n# owidall &lt;- read.csv(url)\n# \n# # Deselect cases/rows with \"OWID\" in the iso_code column\n# owidall &lt;- owidall[!grepl(\"OWID\", owidall$iso_code), ]\n# \n# # Subset by continent: Europe\n# owideu &lt;- subset(owidall, continent == \"Europe\")\n# \n# \n# # Load the required libraries\n# library(ggplot2)\n# library(dplyr)\n# \n# # Assuming 'owideu' contains the COVID-19 data for European countries\n# \n# # Extract year and month from the date column\n# owideu &lt;- owideu %&gt;%\n#   mutate(YearMonth = format(as.Date(date), \"%Y-%m\"))\n# \n# # Create a scatter plot\n# ggplot(data = owideu, aes(x = YearMonth, y = new_deaths)) +\n#   geom_point() +\n#   labs(\n#     x = \"Year-Month\",\n#     y = \"Daily New Deaths\",\n#     title = \"Scatter Plot of Daily New Deaths in European Countries\",\n#     subtitle = \"Data grouped by Year-Month\"\n#   ) +\n#   theme(axis.text.x = element_text(angle = 90, hjust = 1))"
  }
]